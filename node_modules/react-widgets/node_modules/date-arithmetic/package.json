{
  "name": "date-arithmetic",
  "version": "3.0.1",
  "description": "simple immutable date math util",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jquense/date-math"
  },
  "keywords": [
    "moment",
    "date",
    "datetime",
    "immutable",
    "locale",
    "math"
  ],
  "author": {
    "name": "Jason Quense @monasticpanic"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jquense/date-math/issues"
  },
  "homepage": "https://github.com/jquense/date-math",
  "readme": "\r\nDate Arthmetic\r\n=================\r\n\r\nA simple object containing some date math utils in the spirit of Moment.js. Unlike Moment this module, returns real date objects, so it isn't chainable.\r\n\r\n    var dateMath = require('date-arithmetic')\r\n\r\n    var date = dateMath.month(new Date) \r\n\r\n## API\r\n\r\nall api methods return a _new_ date. Date objects are never mutated.\r\n\r\n### Accessors\r\n\r\nget and set date part values. \r\n\r\n- `dateMath.milliseconds(date, [value])`\r\n- `dateMath.seconds(date, [value])`\r\n- `dateMath.minutes(date, [value])`\r\n- `dateMath.hours(date, [value])`\r\n- `dateMath.date(date, [value])`\r\n- `dateMath.day(date, [value])`\r\n- `dateMath.weekday(date, [value], [firstOfWeek = 0])`\r\n- `dateMath.month(date, [value])`\r\n- `dateMath.year(date, [value])`\r\n- `dateMath.decade(date, [value])`\r\n- `dateMath.century(date, [value])`\r\n\r\n### `startOf(data, unit, [firstOfWeek = 0])`\r\n\r\nreturn a new date with the relevent date parts zero'd out. \r\n\r\n    dateMath.startOf(new Date, 'day') // -> no time components\r\n\r\nValid unit values are; `\"second\", \"minutes\", \"hours\", \"day\", \"week\", \"month\", \"year\", \"decade\", \"century\" `\r\n\r\n\r\n### `endOf(data, unit)`\r\n\r\nthe opposite of `startOf`\r\n\r\n    dateMath.endOf(new Date, 'day') // -> one millisecond before tomorrow\r\n\r\nValid unit values are; `\"milliseconds\", \"second\", \"minutes\", \"hours\", \"day\", \"weekday\", \"month\", \"year\", \"decade\", \"century\"`.\r\n\r\n### Math Functions\r\n\r\nArithmetic functions\r\n\r\n- `dateMath.add(date, value, unit)`\r\n- `dateMath.subtract(date, value, unit)`\r\n- `dateMath.eq(dateA, dateB)`\r\n- `dateMath.neq(dateA, dateB)`\r\n- `dateMath.gte(dateA, dateB)`\r\n- `dateMath.gt(dateA, dateB)`\r\n- `dateMath.lte(dateA, dateB)`\r\n- `dateMath.lt(dateA, dateB)`\r\n- `dateMath.inRange(day, min, max, unit)`\r\n- `dateMath.min(dateA, dateB, dateN)`\r\n- `dateMath.max(dateA, dateB, dateN)`\r\n\r\nValid unit values are; `\"second\", \"minutes\", \"hours\", \"day\", \"week\", \"month\", \"year\", \"decade\", \"century\" `",
  "readmeFilename": "README.md",
  "_id": "date-arithmetic@3.0.1",
  "_from": "date-arithmetic@^3.0.0"
}
