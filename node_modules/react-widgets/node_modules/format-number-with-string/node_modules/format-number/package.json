{
  "name": "format-number",
  "version": "2.0.1",
  "description": "Formats numbers with separators every 3 digits and currency etc. Highly configurable.",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/componitable/format-number.git"
  },
  "author": {
    "name": "ForbesLindesay"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/componitable/format-number.png)](http://travis-ci.org/componitable/format-number)\n# format-number\n\nHighly configurable formatter that expects a valid number in 'computer' format and accepts the following as options for formatting\n\n## Options\n\n- `negativeType` string: 'right','left','brackets','none'; default = 'left' (note only used for setting of default symbols)\n- `negativeLeftSymbol` string: default = '-' if `negativeType` is 'left', '(' if `negativeType` is 'brackets' and '' otherwise\n- `negativeRightSymbol` string: default = '-' if `negativeType` is 'right', ')' if `negativeType` is 'brackets' and '' otherwise\n- `negativeLeftOut` boolean: whether the left symbol should be outside, ie precede the prefix; default = true\n- `negativeRightOut` boolean: whether the right symbol should be outside, ie follow the suffix; default = true\n- `prefix` string: default = ''\n- `suffix` string: default = ''\n- `integerSeparator` string: to be used as the thousands separator; default = ','\n- `decimalsSeparator` string: to be used as the thousanths separator; default = ''\n- `decimal` string: char to be used as decimal point; default = '.'\n- `padLeft` number: leading 0s will be added to left of number to make integer part this length; default = -1 /no padding\n- `padRight` number: trailing 0s will be added; default = -1 /no padding\n- `round` number: number of decimal places to round to (rounds to nearest integer, mid point rounds away from zero ie 3.55 ~ 3.6 to 1dp, -3.55 ~ -3.6 to 1dp; default = no rounding\n- `truncate` number: number of decimal places to truncate (3.58 truncates to 3.5 for 1dp, 3 for 0dp); default =  no truncating\n\n## Override Options\n\n- `noUnits` boolean: if true will override and leave out prefix and suffix; default= false\n- `noSeparator` - boolean: if true will override both integer and decimals separator and leave them out\n\n## Usage\n\n```\nvar format=require('format-number');\nvar formattedNumber = format({prefix: '£', suffix: '/item'})(68932, {noSeparator: true});\n```\n\nor\n\n```\nvar format=require('format-number');\nvar myFormat = format({prefix: '£', suffix: '/item'});\nvar formattedNumber = myFormat(68932, {noSeparator: true});\n```\n\nwill both set formattedNumber to '£68932/item'\n\nThe override options can be ommitted:\n\n```\nvar format=require('format-number');\nvar formattedNumber = format({prefix: '£', suffix: '/item'})(68932);\n```\n\nreturns '£68,932/item'\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/componitable/format-number/issues"
  },
  "_id": "format-number@2.0.1",
  "_from": "format-number@^2.0.0"
}
